trigger:
- main

parameters:
- name: helmOperation
  displayName: 'Helm Operation'
  type: string
  default: 'both'
  values:
    - install
    - uninstall
    - both

variables:
- group: credentials
- name: es_url
  value: '87.207.10.127'
- name: helmOperation
  value: ${{ parameters.helmOperation }}
- name: es_index
  value: 'search-microk8s'
- name: repo_github
  value: 'https://github.com/jakmrowka/azure-fluentd-microk8s-elasticsearch'

stages:
- stage: microk8s
  condition: always()
  pool:
    name: gads-agent-pool
    demands:
      - agent.name -equals gad-agent-pi4b
  jobs:
  - job: microK8sCred
    condition: or(eq(variables['helmOperation'], 'install'), eq(variables['helmOperation'], 'both'))
    steps:
    - checkout: self
    - task: AzureKeyVault@2
      inputs:
        azureSubscription: 'Azure dla student√≥w(232fe18a-7562-4ae5-9507-29d2bde01130)'
        KeyVaultName: 'credentialsforproject'
        SecretsFilter: '*'
        RunAsPreJob: false
    - task: qetza.replacetokens.replacetokens-task.replacetokens@3
      inputs:
        targetFiles: |
          helm/values.yaml
        encoding: 'auto'
        writeBOM: true
        actionOnMissing: 'fail'
        keepToken: false
        tokenPrefix: '#{'
        tokenSuffix: '}#'
        useLegacyPattern: false
        enableTelemetry: true
    - script: |
        mkdir -p helm/files
      displayName: 'Prepare Helm Chart Directory'
  - job: microK8sDeploy
    dependsOn: microK8sCred
    condition: always()
    steps:
    - checkout: none
    - task: DownloadSecureFile@1
      name: kubeconfig
      inputs:
        secureFile: 'klaster_config'
    - script: |
        echo "Using Helm to lint the chart..."
        export KUBECONFIG=$(kubeconfig.secureFilePath)
        helm lint helm/
      displayName: 'Lint Helm Chart'
    - script: |
        export KUBECONFIG=$(kubeconfig.secureFilePath)
        case "$(helmOperation)" in
          "install")
            echo "Installing with Helm..."
            helm upgrade --install fluentd-logging helm/ --insecure-skip-tls-verify
            ;;
          "uninstall")
            echo "Uninstalling Helm chart..."
            helm uninstall fluentd-logging
            ;;
          "both")
            echo "Reinstalling Helm chart..."
            helm uninstall fluentd-logging
            helm upgrade --install fluentd-logging helm/ --insecure-skip-tls-verify
            ;;
        esac
      displayName: 'Helm Operations'

- stage: GithubSync
  condition: succeeded('microk8s')
  pool:
    name: gads-agent-pool
  jobs:
  - job: RepoSync
    steps:
    - script: |
        echo Original: $(Build.Repository.Uri)
        NEW_REPO_URI=$(echo $(Build.Repository.Uri) | sed 's/https:\/\/.*@/https:\/\//')
        echo Modified: $NEW_REPO_URI
        echo "##vso[task.setvariable variable=NEW_REPO_URI]$NEW_REPO_URI"
      displayName: 'Modify Build Repository URI (Linux)'
      condition: eq(variables['Agent.OS'], 'Linux')

    - powershell: |
        $originalUri = "$(Build.Repository.Uri)"
        Write-Host "Original: $originalUri"
        $modifiedUri = $originalUri -replace "https://.*@", "https://"
        Write-Host "Modified: $modifiedUri"
        echo "##vso[task.setvariable variable=NEW_REPO_URI]$modifiedUri"
      displayName: 'Modify Build Repository URI (Windows)'
      condition: eq(variables['Agent.OS'], 'Windows_NT')

    - task: mirror-git-repository-vsts-task@1
      inputs:
        sourceGitRepositoryUri: '$(NEW_REPO_URI)'
        sourceGitRepositoryPersonalAccessToken: '$(azure_pat)'
        destinationGitRepositoryUri: '$(repo_github)'
        destinationGitRepositoryPersonalAccessToken: '$(git_pat)'
